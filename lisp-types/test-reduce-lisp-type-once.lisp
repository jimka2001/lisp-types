;; Copyright (c) 2016 EPITA Research and Development Laboratory
;;
;; Permission is hereby granted, free of charge, to any person obtaining
;; a copy of this software and associated documentation
;; files (the "Software"), to deal in the Software without restriction,
;; including without limitation the rights to use, copy, modify, merge,
;; publish, distribute, sublicense, and/or sell copies of the Software,
;; and to permit persons to whom the Software is furnished to do so,
;; subject to the following conditions:
;;
;; The above copyright notice and this permission notice shall be
;; included in all copies or substantial portions of the Software.
;;
;; THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
;; EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
;; MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
;; NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
;; LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
;; OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
;; WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

(in-package :lisp-types.test)

(let ((lisp-types-test (find-package  :lisp-types.test))
      (lisp-types (find-package  :lisp-types)))
  (do-symbols (name :lisp-types)
    (when (and (eq lisp-types (symbol-package name))
               (not (find-symbol (symbol-name name) lisp-types-test)))
      (format t "4 importing name=~A into  :lisp-types.test~%" name)
      (shadowing-import name :lisp-types.test))))

(define-test types/dnf-type-p
  (assert-true (dnf-type-p nil))
  (assert-true (dnf-type-p t))
  (assert-true (dnf-type-p 'A))
  (assert-true (dnf-type-p '(or a b)))
  (assert-true (dnf-type-p '(and a b)))
  (assert-true (dnf-type-p '(not a)))
  (assert-true (dnf-type-p '(and a (not b))))
  (assert-true (dnf-type-p '(or a (not b))))
  (assert-true (dnf-type-p '(or
                             (and a (not b))
                             (and c (not d)))))

  (assert-false (dnf-type-p '(and)))
  (assert-false (dnf-type-p '(or)))
  (assert-false (dnf-type-p '(not)))
  (assert-false (dnf-type-p '(and (and a) b)))
  (assert-false (dnf-type-p '(or (or a) b)))
  (assert-false (dnf-type-p '(not (not a))))
  (assert-false (dnf-type-p '(not (or a b))))
  (assert-false (dnf-type-p '(not (and a b))))
  (assert-false (dnf-type-p '(and (or a b) (or c))))
  (assert-false (dnf-type-p '(and a)))
  (assert-false (dnf-type-p '(or a)))
  (assert-false (dnf-type-p '(or (not (and a b)) (and c d))))
  (assert-false (dnf-type-p '(or (and (not (and a b)) c) d)))

  (assert-false (dnf-type-p '(or a a)))
  (assert-false (dnf-type-p '(and a a)))
  (assert-false (dnf-type-p '(not a a))) ;; not dnf because syntactically incorrect

)

(define-test types/reduce-lisp-type-1
  (assert-true (= 3 (length
                     (reduce-lisp-type
                      '(OR (AND BIGNUM BIT FIXNUM UNSIGNED-BYTE (NOT BIGNUM)
                            (NOT BIT))
                        (AND BIGNUM BIT FIXNUM UNSIGNED-BYTE (NOT BIGNUM)
                         (NOT BIT))
                        (AND BIGNUM BIT FIXNUM UNSIGNED-BYTE (NOT BIGNUM)
                         (NOT BIT))
                        (AND BIGNUM BIT FIXNUM UNSIGNED-BYTE (NOT BIGNUM)
                         (NOT BIT))
                        (AND BIGNUM BIT FIXNUM UNSIGNED-BYTE (NOT BIGNUM)
                         (NOT BIT))
                        (AND BIGNUM BIT FIXNUM UNSIGNED-BYTE (NOT BIGNUM)
                         (NOT BIT))
                        (AND BIGNUM BIT FIXNUM UNSIGNED-BYTE (NOT BIGNUM)
                         (NOT BIT) (NOT FIXNUM))
                        (AND BIGNUM BIT FIXNUM UNSIGNED-BYTE (NOT BIGNUM)
                         (NOT BIT) (NOT FIXNUM))
                        (AND BIGNUM BIT FIXNUM UNSIGNED-BYTE (NOT BIGNUM)
                         (NOT BIT) (NOT FIXNUM))
                        (AND BIGNUM BIT FIXNUM UNSIGNED-BYTE (NOT BIGNUM)
                         (NOT BIT) (NOT FIXNUM))
                        (AND BIGNUM BIT FIXNUM UNSIGNED-BYTE (NOT BIGNUM)
                         (NOT BIT) (NOT FIXNUM))
                        (AND BIGNUM BIT FIXNUM UNSIGNED-BYTE (NOT BIGNUM)
                         (NOT BIT) (NOT FIXNUM))
                        (AND BIGNUM BIT FIXNUM UNSIGNED-BYTE (NOT BIGNUM)
                         (NOT BIT) (NOT FIXNUM)))
                      :full nil)))))



(define-test types/reduce-lisp-type-2
  (assert-true (dnf-type-p
                (reduce-lisp-type
                 '(AND (OR (AND BIGNUM BIT FIXNUM UNSIGNED-BYTE (NOT BIGNUM)
                            (NOT BIT))
                        (AND BIGNUM BIT FIXNUM UNSIGNED-BYTE (NOT BIGNUM)
                         (NOT BIT))
                        (AND BIGNUM BIT FIXNUM UNSIGNED-BYTE (NOT BIGNUM)
                         (NOT BIT))
                        (AND BIGNUM BIT FIXNUM UNSIGNED-BYTE (NOT BIGNUM)
                         (NOT BIT))
                        (AND BIGNUM BIT FIXNUM UNSIGNED-BYTE (NOT BIGNUM)
                         (NOT BIT))
                        (AND BIGNUM BIT FIXNUM UNSIGNED-BYTE (NOT BIGNUM)
                         (NOT BIT))
                        (AND BIGNUM BIT FIXNUM UNSIGNED-BYTE (NOT BIGNUM)
                         (NOT BIT) (NOT FIXNUM))
                        (AND BIGNUM BIT FIXNUM UNSIGNED-BYTE (NOT BIGNUM)
                         (NOT BIT) (NOT FIXNUM))
                        (AND BIGNUM BIT FIXNUM UNSIGNED-BYTE (NOT BIGNUM)
                         (AND BIT FIXNUM REAL (NOT BIT))
                         (AND BIT FIXNUM REAL (NOT BIT) (NOT FIXNUM))
                         (AND BIT FIXNUM REAL (NOT BIT) (NOT FIXNUM))
                         (AND FIXNUM REAL UNSIGNED-BYTE (NOT BIGNUM) (NOT BIT)
                          (NOT FIXNUM))
                         (AND FIXNUM REAL UNSIGNED-BYTE (NOT BIGNUM) (NOT BIT)
                          (NOT FIXNUM))
                         (AND FIXNUM REAL UNSIGNED-BYTE (NOT BIT)
                          (NOT FIXNUM))
                         (AND FIXNUM REAL (NOT BIGNUM) (NOT BIT) (NOT FIXNUM))
                         (AND FIXNUM REAL (NOT BIT) (NOT FIXNUM)))))
                 :full nil))))

(define-test types/reduce-lisp-type-3
  (assert-true (dnf-type-p
                (reduce-lisp-type
                 '(AND
                   (OR (AND BIGNUM BIT FIXNUM UNSIGNED-BYTE (NOT BIGNUM) (NOT BIT))
                    (AND FIXNUM (NOT BIGNUM) (NOT BIT) (NOT FIXNUM))
                    (AND FIXNUM (NOT BIT) (NOT FIXNUM)))
                   (OR (AND BIGNUM BIT FIXNUM REAL UNSIGNED-BYTE (NOT BIGNUM) (NOT BIT))
                    (AND BIGNUM BIT FIXNUM REAL UNSIGNED-BYTE (NOT BIGNUM) (NOT BIT))
                    (AND BIGNUM BIT FIXNUM REAL UNSIGNED-BYTE (NOT BIGNUM) (NOT BIT))
                    (AND BIGNUM BIT FIXNUM REAL UNSIGNED-BYTE (NOT BIGNUM) (NOT BIT))
                    (AND BIGNUM BIT FIXNUM REAL UNSIGNED-BYTE (NOT BIGNUM) (NOT BIT))
                    (AND BIGNUM BIT FIXNUM REAL UNSIGNED-BYTE (NOT BIGNUM) (NOT BIT))
                    (AND BIGNUM BIT FIXNUM REAL UNSIGNED-BYTE (NOT BIGNUM) (NOT BIT))
                    (AND BIGNUM BIT FIXNUM REAL UNSIGNED-BYTE (NOT BIGNUM) (NOT BIT))
                    (AND BIGNUM BIT FIXNUM REAL UNSIGNED-BYTE (NOT BIGNUM) (NOT BIT) (NOT FIXNUM))
                    (AND BIGNUM BIT FIXNUM REAL UNSIGNED-BYTE (NOT BIGNUM) (NOT BIT) (NOT FIXNUM))
                    (AND BIGNUM BIT FIXNUM REAL UNSIGNED-BYTE (NOT BIGNUM) (NOT BIT) (NOT FIXNUM))
                    (AND BIGNUM BIT FIXNUM REAL UNSIGNED-BYTE (NOT BIT))
                    (AND BIGNUM BIT FIXNUM REAL UNSIGNED-BYTE (NOT BIT))
                    (AND BIGNUM BIT FIXNUM REAL UNSIGNED-BYTE (NOT BIT))
                    (AND BIGNUM BIT FIXNUM REAL UNSIGNED-BYTE (NOT BIT) (NOT FIXNUM))
                    (AND BIGNUM BIT FIXNUM REAL UNSIGNED-BYTE (NOT BIT) (NOT FIXNUM))
                    (AND BIGNUM BIT FIXNUM REAL UNSIGNED-BYTE (NOT BIT) (NOT FIXNUM))
                    (AND BIGNUM BIT FIXNUM REAL (NOT BIGNUM) (NOT BIT))
                    (AND BIGNUM BIT FIXNUM REAL (NOT BIGNUM) (NOT BIT) (NOT FIXNUM))
                    (AND BIGNUM BIT FIXNUM REAL (NOT BIGNUM) (NOT BIT) (NOT FIXNUM))
                    (AND BIGNUM BIT FIXNUM REAL (NOT BIGNUM) (NOT BIT) (NOT FIXNUM))
                    (AND BIGNUM BIT FIXNUM REAL (NOT BIGNUM) (NOT BIT) (NOT FIXNUM))
                    (AND BIGNUM BIT FIXNUM REAL (NOT BIT))
                    (AND BIGNUM BIT FIXNUM REAL (NOT BIT))
                    (AND BIGNUM BIT FIXNUM REAL (NOT BIT) (NOT FIXNUM))
                    (AND BIGNUM BIT FIXNUM REAL (NOT BIT) (NOT FIXNUM))
                    (AND BIGNUM BIT FIXNUM REAL (NOT BIT) (NOT FIXNUM))
                    (AND BIGNUM BIT FIXNUM REAL (NOT BIT) (NOT FIXNUM))
                    (AND BIGNUM FIXNUM REAL UNSIGNED-BYTE (NOT BIGNUM) (NOT BIT))
                    (AND BIT FIXNUM REAL (NOT BIGNUM) (NOT BIT) (NOT FIXNUM))
                    (AND BIT FIXNUM REAL (NOT BIT))
                    (AND BIT FIXNUM REAL (NOT BIT) (NOT FIXNUM))
                    (AND BIT FIXNUM REAL (NOT BIT) (NOT FIXNUM))
                    (AND FIXNUM REAL UNSIGNED-BYTE (NOT BIGNUM) (NOT BIT) (NOT FIXNUM))
                    (AND FIXNUM REAL UNSIGNED-BYTE (NOT BIGNUM) (NOT BIT) (NOT FIXNUM))
                    (AND FIXNUM REAL UNSIGNED-BYTE (NOT BIT) (NOT FIXNUM))
                    (AND FIXNUM REAL (NOT BIGNUM) (NOT BIT) (NOT FIXNUM))
                    (AND FIXNUM REAL (NOT BIT) (NOT FIXNUM))))
                 :full nil))))

(define-test types/reduce-lisp-type-4
  (assert-true (dnf-type-p
                (reduce-lisp-type
                 '(AND
                   (OR
                    (AND BIGNUM BIT FIXNUM UNSIGNED-BYTE (NOT BIGNUM) (NOT BIT))
                    (AND FIXNUM (NOT BIGNUM) (NOT BIT) (NOT FIXNUM))
                    (AND FIXNUM (NOT BIT) (NOT FIXNUM)))
                   (OR
                    (AND BIGNUM BIT FIXNUM REAL UNSIGNED-BYTE (NOT BIGNUM) (NOT BIT))
                    (AND BIGNUM BIT FIXNUM REAL UNSIGNED-BYTE (NOT BIGNUM) (NOT BIT))
                    (AND BIGNUM BIT FIXNUM REAL UNSIGNED-BYTE (NOT BIGNUM) (NOT BIT) (NOT FIXNUM))
                    (AND BIGNUM BIT FIXNUM REAL UNSIGNED-BYTE (NOT BIGNUM) (NOT BIT) (NOT FIXNUM))
                    (AND BIGNUM BIT FIXNUM REAL UNSIGNED-BYTE (NOT BIT))
                    (AND BIGNUM BIT FIXNUM REAL UNSIGNED-BYTE (NOT BIT))
                    (AND BIGNUM BIT FIXNUM REAL UNSIGNED-BYTE (NOT BIT) (NOT FIXNUM))
                    (AND BIGNUM BIT FIXNUM REAL UNSIGNED-BYTE (NOT BIT) (NOT FIXNUM))
                    (AND BIGNUM BIT FIXNUM REAL (NOT BIGNUM) (NOT BIT))
                    (AND BIGNUM BIT FIXNUM REAL (NOT BIGNUM) (NOT BIT) (NOT FIXNUM))
                    (AND BIGNUM BIT FIXNUM REAL (NOT BIGNUM) (NOT BIT) (NOT FIXNUM))
                    (AND BIGNUM BIT FIXNUM REAL (NOT BIT))
                    (AND BIGNUM BIT FIXNUM REAL (NOT BIT))
                    (AND BIGNUM BIT FIXNUM REAL (NOT BIT) (NOT FIXNUM))
                    (AND BIGNUM BIT FIXNUM REAL (NOT BIT) (NOT FIXNUM))
                    (AND BIGNUM FIXNUM REAL UNSIGNED-BYTE (NOT BIGNUM) (NOT BIT))
                    (AND BIT FIXNUM REAL (NOT BIGNUM) (NOT BIT) (NOT FIXNUM))
                    (AND BIT FIXNUM REAL (NOT BIT))
                    (AND BIT FIXNUM REAL (NOT BIT) (NOT FIXNUM))
                    (AND BIT FIXNUM REAL (NOT BIT) (NOT FIXNUM))
                    (AND FIXNUM REAL UNSIGNED-BYTE (NOT BIGNUM) (NOT BIT) (NOT FIXNUM))
                    (AND FIXNUM REAL UNSIGNED-BYTE (NOT BIGNUM) (NOT BIT) (NOT FIXNUM))
                    (AND FIXNUM REAL UNSIGNED-BYTE (NOT BIT) (NOT FIXNUM))
                    (AND FIXNUM REAL (NOT BIGNUM) (NOT BIT) (NOT FIXNUM))
                    (AND FIXNUM REAL (NOT BIT) (NOT FIXNUM))))
                 :full nil))))

(define-test types/reduce-lisp-type-5
  (assert-true (dnf-type-p
                (reduce-lisp-type
                 '(AND (OR (AND BIGNUM BIT FIXNUM UNSIGNED-BYTE (NOT BIGNUM)
                            (NOT BIT))
                        (AND BIGNUM BIT FIXNUM UNSIGNED-BYTE (NOT BIGNUM)
                         (NOT BIT))
                        (AND BIGNUM BIT FIXNUM UNSIGNED-BYTE (NOT BIGNUM)
                         (NOT BIT))
                        (AND BIGNUM BIT FIXNUM UNSIGNED-BYTE (NOT BIGNUM)
                         (NOT BIT))
                        (AND BIGNUM BIT FIXNUM UNSIGNED-BYTE (NOT BIGNUM)
                         (NOT BIT))
                        (AND BIGNUM BIT FIXNUM UNSIGNED-BYTE (NOT BIGNUM)
                         (NOT BIT))
                        (AND BIGNUM BIT FIXNUM UNSIGNED-BYTE (NOT BIGNUM)
                         (NOT BIT) (NOT FIXNUM))
                        (AND BIGNUM BIT FIXNUM UNSIGNED-BYTE (NOT BIGNUM)
                         (NOT BIT) (NOT FIXNUM))
                        (AND BIGNUM BIT FIXNUM UNSIGNED-BYTE (NOT BIGNUM)
                         (NOT BIT) (NOT FIXNUM))
                        (AND BIGNUM BIT FIXNUM UNSIGNED-BYTE (NOT BIGNUM)
                         (NOT BIT) (NOT FIXNUM))
                        (AND BIGNUM BIT FIXNUM UNSIGNED-BYTE (NOT BIGNUM)
                         (NOT BIT) (NOT FIXNUM))
                        (AND BIGNUM BIT FIXNUM UNSIGNED-BYTE (NOT BIGNUM)
                         (NOT BIT) (NOT FIXNUM))
                        (AND BIGNUM BIT FIXNUM UNSIGNED-BYTE (NOT BIGNUM)
                         (NOT BIT) (NOT FIXNUM))
                        (AND BIGNUM BIT FIXNUM UNSIGNED-BYTE (NOT BIGNUM)
                         (NOT BIT) (NOT FIXNUM))
                        (AND BIGNUM BIT FIXNUM UNSIGNED-BYTE (NOT BIGNUM)
                         (NOT BIT) (NOT FIXNUM))
                        (AND BIGNUM BIT FIXNUM UNSIGNED-BYTE (NOT BIGNUM)
                         (NOT BIT) (NOT FIXNUM))
                        (AND BIGNUM BIT FIXNUM UNSIGNED-BYTE (NOT BIGNUM)
                         (NOT BIT) (NOT FIXNUM))
                        (AND BIGNUM BIT FIXNUM UNSIGNED-BYTE (NOT BIGNUM)
                         (NOT BIT) (NOT FIXNUM))
                        (AND BIGNUM BIT FIXNUM UNSIGNED-BYTE (NOT BIGNUM)
                         (NOT BIT) (NOT FIXNUM))
                        (AND BIGNUM BIT FIXNUM UNSIGNED-BYTE (NOT BIGNUM)
                         (NOT BIT) (NOT FIXNUM))
                        (AND BIGNUM BIT FIXNUM UNSIGNED-BYTE (NOT BIGNUM)
                         (NOT BIT) (NOT FIXNUM))
                        (AND BIGNUM BIT FIXNUM UNSIGNED-BYTE (NOT BIGNUM)
                         (NOT BIT) (NOT FIXNUM))
                        (AND BIGNUM BIT FIXNUM UNSIGNED-BYTE (NOT BIGNUM)
                         (NOT BIT) (NOT FIXNUM))
                        (AND BIGNUM BIT FIXNUM UNSIGNED-BYTE (NOT BIGNUM)
                         (NOT BIT) (NOT FIXNUM))
                        (AND BIGNUM BIT FIXNUM UNSIGNED-BYTE (NOT BIT))
                        (AND BIGNUM BIT FIXNUM UNSIGNED-BYTE (NOT BIT))
                        (AND BIGNUM BIT FIXNUM UNSIGNED-BYTE (NOT BIT)
                         (NOT FIXNUM))
                        (AND BIGNUM BIT FIXNUM UNSIGNED-BYTE (NOT BIT)
                         (NOT FIXNUM))
                        (AND BIGNUM BIT FIXNUM UNSIGNED-BYTE (NOT BIT)
                         (NOT FIXNUM))
                        (AND BIGNUM BIT FIXNUM UNSIGNED-BYTE (NOT BIT)
                         (NOT FIXNUM))
                        (AND BIGNUM BIT FIXNUM UNSIGNED-BYTE (NOT BIT)
                         (NOT FIXNUM))
                        (AND BIGNUM BIT FIXNUM UNSIGNED-BYTE (NOT BIT)
                         (NOT FIXNUM))
                        (AND BIGNUM BIT FIXNUM (NOT BIGNUM) (NOT BIT))
                        (AND BIGNUM BIT FIXNUM (NOT BIGNUM) (NOT BIT))
                        (AND BIGNUM BIT FIXNUM (NOT BIGNUM) (NOT BIT)
                         (NOT FIXNUM))
                        (AND BIGNUM BIT FIXNUM (NOT BIGNUM) (NOT BIT)
                         (NOT FIXNUM))
                        (AND BIGNUM BIT FIXNUM (NOT BIGNUM) (NOT BIT)
                         (NOT FIXNUM))
                        (AND BIGNUM BIT FIXNUM (NOT BIGNUM) (NOT BIT)
                         (NOT FIXNUM))
                        (AND BIGNUM BIT FIXNUM (NOT BIGNUM) (NOT BIT)
                         (NOT FIXNUM))
                        (AND BIGNUM BIT FIXNUM (NOT BIGNUM) (NOT BIT)
                         (NOT FIXNUM))
                        (AND BIGNUM BIT FIXNUM (NOT BIT))
                        (AND BIGNUM BIT FIXNUM (NOT BIT) (NOT FIXNUM))
                        (AND BIGNUM BIT FIXNUM (NOT BIT) (NOT FIXNUM))
                        (AND BIGNUM FIXNUM UNSIGNED-BYTE (NOT BIGNUM)
                         (NOT BIT))
                        (AND BIGNUM FIXNUM UNSIGNED-BYTE (NOT BIGNUM)
                         (NOT BIT))
                        (AND BIGNUM FIXNUM UNSIGNED-BYTE (NOT BIGNUM)
                         (NOT BIT) (NOT FIXNUM))
                        (AND BIGNUM FIXNUM UNSIGNED-BYTE (NOT BIGNUM)
                         (NOT BIT) (NOT FIXNUM))
                        (AND BIGNUM FIXNUM UNSIGNED-BYTE (NOT BIGNUM)
                         (NOT BIT) (NOT FIXNUM))
                        (AND BIGNUM FIXNUM UNSIGNED-BYTE (NOT BIGNUM)
                         (NOT BIT) (NOT FIXNUM))
                        (AND BIGNUM FIXNUM UNSIGNED-BYTE (NOT BIGNUM)
                         (NOT BIT) (NOT FIXNUM))
                        (AND BIGNUM FIXNUM UNSIGNED-BYTE (NOT BIGNUM)
                         (NOT BIT) (NOT FIXNUM))
                        (AND BIGNUM FIXNUM UNSIGNED-BYTE (NOT BIT))
                        (AND BIGNUM FIXNUM UNSIGNED-BYTE (NOT BIT)
                         (NOT FIXNUM))
                        (AND BIGNUM FIXNUM UNSIGNED-BYTE (NOT BIT)
                         (NOT FIXNUM))
                        (AND BIGNUM FIXNUM (NOT BIGNUM) (NOT BIT))
                        (AND BIGNUM FIXNUM (NOT BIGNUM) (NOT BIT)
                         (NOT FIXNUM))
                        (AND BIGNUM FIXNUM (NOT BIGNUM) (NOT BIT)
                         (NOT FIXNUM))
                        (AND BIGNUM FIXNUM (NOT BIT) (NOT FIXNUM))
                        (AND BIT FIXNUM UNSIGNED-BYTE (NOT BIGNUM) (NOT BIT)
                         (NOT FIXNUM))
                        (AND BIT FIXNUM UNSIGNED-BYTE (NOT BIGNUM) (NOT BIT)
                         (NOT FIXNUM))
                        (AND BIT FIXNUM UNSIGNED-BYTE (NOT BIGNUM) (NOT BIT)
                         (NOT FIXNUM))
                        (AND BIT FIXNUM UNSIGNED-BYTE (NOT BIGNUM) (NOT BIT)
                         (NOT FIXNUM))
                        (AND BIT FIXNUM UNSIGNED-BYTE (NOT BIGNUM) (NOT BIT)
                         (NOT FIXNUM))
                        (AND BIT FIXNUM UNSIGNED-BYTE (NOT BIGNUM) (NOT BIT)
                         (NOT FIXNUM))
                        (AND BIT FIXNUM UNSIGNED-BYTE (NOT BIT) (NOT FIXNUM))
                        (AND BIT FIXNUM UNSIGNED-BYTE (NOT BIT) (NOT FIXNUM))
                        (AND BIT FIXNUM (NOT BIGNUM) (NOT BIT) (NOT FIXNUM))
                        (AND BIT FIXNUM (NOT BIGNUM) (NOT BIT) (NOT FIXNUM))
                        (AND BIT FIXNUM (NOT BIT) (NOT FIXNUM))
                        (AND FIXNUM UNSIGNED-BYTE (NOT BIGNUM) (NOT BIT)
                         (NOT FIXNUM))
                        (AND FIXNUM UNSIGNED-BYTE (NOT BIGNUM) (NOT BIT)
                         (NOT FIXNUM))
                        (AND FIXNUM UNSIGNED-BYTE (NOT BIT) (NOT FIXNUM))
                        (AND FIXNUM (NOT BIGNUM) (NOT BIT) (NOT FIXNUM))
                        (AND FIXNUM (NOT BIT) (NOT FIXNUM)))
                   (OR (AND BIGNUM BIT FIXNUM REAL UNSIGNED-BYTE
                        (NOT BIGNUM) (NOT BIT))
                    (AND BIGNUM BIT FIXNUM REAL UNSIGNED-BYTE
                     (NOT BIGNUM) (NOT BIT))
                    (AND BIGNUM BIT FIXNUM REAL UNSIGNED-BYTE
                     (NOT BIGNUM) (NOT BIT))
                    (AND BIGNUM BIT FIXNUM REAL UNSIGNED-BYTE
                     (NOT BIGNUM) (NOT BIT))
                    (AND BIGNUM BIT FIXNUM REAL UNSIGNED-BYTE
                     (NOT BIGNUM) (NOT BIT))
                    (AND BIGNUM BIT FIXNUM REAL UNSIGNED-BYTE
                     (NOT BIGNUM) (NOT BIT))
                    (AND BIGNUM BIT FIXNUM REAL UNSIGNED-BYTE
                     (NOT BIGNUM) (NOT BIT))
                    (AND BIGNUM BIT FIXNUM REAL UNSIGNED-BYTE
                     (NOT BIGNUM) (NOT BIT))
                    (AND BIGNUM BIT FIXNUM REAL UNSIGNED-BYTE
                     (NOT BIGNUM) (NOT BIT) (NOT FIXNUM))
                    (AND BIGNUM BIT FIXNUM REAL UNSIGNED-BYTE
                     (NOT BIGNUM) (NOT BIT) (NOT FIXNUM))
                    (AND BIGNUM BIT FIXNUM REAL UNSIGNED-BYTE
                     (NOT BIGNUM) (NOT BIT) (NOT FIXNUM))
                    (AND BIGNUM BIT FIXNUM REAL UNSIGNED-BYTE
                     (NOT BIGNUM) (NOT BIT) (NOT FIXNUM))
                    (AND BIGNUM BIT FIXNUM REAL UNSIGNED-BYTE
                     (NOT BIGNUM) (NOT BIT) (NOT FIXNUM))
                    (AND BIGNUM BIT FIXNUM REAL UNSIGNED-BYTE
                     (NOT BIGNUM) (NOT BIT) (NOT FIXNUM))
                    (AND BIGNUM BIT FIXNUM REAL UNSIGNED-BYTE
                     (NOT BIGNUM) (NOT BIT) (NOT FIXNUM))
                    (AND BIGNUM BIT FIXNUM REAL UNSIGNED-BYTE
                     (NOT BIGNUM) (NOT BIT) (NOT FIXNUM))
                    (AND BIGNUM BIT FIXNUM REAL UNSIGNED-BYTE
                     (NOT BIGNUM) (NOT BIT) (NOT FIXNUM))
                    (AND BIGNUM BIT FIXNUM REAL UNSIGNED-BYTE
                     (NOT BIGNUM) (NOT BIT) (NOT FIXNUM))
                    (AND BIGNUM BIT FIXNUM REAL UNSIGNED-BYTE
                     (NOT BIGNUM) (NOT BIT) (NOT FIXNUM))
                    (AND BIGNUM BIT FIXNUM REAL UNSIGNED-BYTE
                     (NOT BIGNUM) (NOT BIT) (NOT FIXNUM))
                    (AND BIGNUM BIT FIXNUM REAL UNSIGNED-BYTE
                     (NOT BIGNUM) (NOT BIT) (NOT FIXNUM))
                    (AND BIGNUM BIT FIXNUM REAL UNSIGNED-BYTE
                     (NOT BIGNUM) (NOT BIT) (NOT FIXNUM))
                    (AND BIGNUM BIT FIXNUM REAL UNSIGNED-BYTE
                     (NOT BIGNUM) (NOT BIT) (NOT FIXNUM))
                    (AND BIGNUM BIT FIXNUM REAL UNSIGNED-BYTE
                     (NOT BIGNUM) (NOT BIT) (NOT FIXNUM))
                    (AND BIGNUM BIT FIXNUM REAL UNSIGNED-BYTE
                     (NOT BIGNUM) (NOT BIT) (NOT FIXNUM))
                    (AND BIGNUM BIT FIXNUM REAL UNSIGNED-BYTE
                     (NOT BIGNUM) (NOT BIT) (NOT FIXNUM))
                    (AND BIGNUM BIT FIXNUM REAL UNSIGNED-BYTE
                     (NOT BIGNUM) (NOT BIT) (NOT FIXNUM))
                    (AND BIGNUM BIT FIXNUM REAL UNSIGNED-BYTE
                     (NOT BIGNUM) (NOT BIT) (NOT FIXNUM))
                    (AND BIGNUM BIT FIXNUM REAL UNSIGNED-BYTE
                     (NOT BIGNUM) (NOT BIT) (NOT FIXNUM))
                    (AND BIGNUM BIT FIXNUM REAL UNSIGNED-BYTE
                     (NOT BIGNUM) (NOT BIT) (NOT FIXNUM))
                    (AND BIGNUM BIT FIXNUM REAL UNSIGNED-BYTE
                     (NOT BIGNUM) (NOT BIT) (NOT FIXNUM))
                    (AND BIGNUM BIT FIXNUM REAL UNSIGNED-BYTE
                     (NOT BIGNUM) (NOT BIT) (NOT FIXNUM))
                    (AND BIGNUM BIT FIXNUM REAL UNSIGNED-BYTE
                     (NOT BIGNUM) (NOT BIT) (NOT FIXNUM))
                    (AND BIGNUM BIT FIXNUM REAL UNSIGNED-BYTE
                     (NOT BIGNUM) (NOT BIT) (NOT FIXNUM))
                    (AND BIGNUM BIT FIXNUM REAL UNSIGNED-BYTE
                     (NOT BIGNUM) (NOT BIT) (NOT FIXNUM))
                    (AND BIGNUM BIT FIXNUM REAL UNSIGNED-BYTE
                     (NOT BIGNUM) (NOT BIT) (NOT FIXNUM))
                    (AND BIGNUM BIT FIXNUM REAL UNSIGNED-BYTE
                     (NOT BIGNUM) (NOT BIT) (NOT FIXNUM))
                    (AND BIGNUM BIT FIXNUM REAL UNSIGNED-BYTE
                     (NOT BIGNUM) (NOT BIT) (NOT FIXNUM))
                    (AND BIGNUM BIT FIXNUM REAL UNSIGNED-BYTE (NOT BIT))
                    (AND BIGNUM BIT FIXNUM REAL UNSIGNED-BYTE (NOT BIT))
                    (AND BIGNUM BIT FIXNUM REAL UNSIGNED-BYTE (NOT BIT))
                    (AND BIGNUM BIT FIXNUM REAL UNSIGNED-BYTE (NOT BIT)
                     (NOT FIXNUM))
                    (AND BIGNUM BIT FIXNUM REAL UNSIGNED-BYTE (NOT BIT)
                     (NOT FIXNUM))
                    (AND BIGNUM BIT FIXNUM REAL UNSIGNED-BYTE (NOT BIT)
                     (NOT FIXNUM))
                    (AND BIGNUM BIT FIXNUM REAL UNSIGNED-BYTE (NOT BIT)
                     (NOT FIXNUM))
                    (AND BIGNUM BIT FIXNUM REAL UNSIGNED-BYTE (NOT BIT)
                     (NOT FIXNUM))
                    (AND BIGNUM BIT FIXNUM REAL UNSIGNED-BYTE (NOT BIT)
                     (NOT FIXNUM))
                    (AND BIGNUM BIT FIXNUM REAL UNSIGNED-BYTE (NOT BIT)
                     (NOT FIXNUM))
                    (AND BIGNUM BIT FIXNUM REAL UNSIGNED-BYTE (NOT BIT)
                     (NOT FIXNUM))
                    (AND BIGNUM BIT FIXNUM REAL UNSIGNED-BYTE (NOT BIT)
                     (NOT FIXNUM))
                    (AND BIGNUM BIT FIXNUM REAL UNSIGNED-BYTE (NOT BIT)
                     (NOT FIXNUM))
                    (AND BIGNUM BIT FIXNUM REAL (NOT BIGNUM) (NOT BIT))
                    (AND BIGNUM BIT FIXNUM REAL (NOT BIGNUM) (NOT BIT))
                    (AND BIGNUM BIT FIXNUM REAL (NOT BIGNUM) (NOT BIT))
                    (AND BIGNUM BIT FIXNUM REAL (NOT BIGNUM) (NOT BIT)
                     (NOT FIXNUM))
                    (AND BIGNUM BIT FIXNUM REAL (NOT BIGNUM) (NOT BIT)
                     (NOT FIXNUM))
                    (AND BIGNUM BIT FIXNUM REAL (NOT BIGNUM) (NOT BIT)
                     (NOT FIXNUM))
                    (AND BIGNUM BIT FIXNUM REAL (NOT BIGNUM) (NOT BIT)
                     (NOT FIXNUM))
                    (AND BIGNUM BIT FIXNUM REAL (NOT BIGNUM) (NOT BIT)
                     (NOT FIXNUM))
                    (AND BIGNUM BIT FIXNUM REAL (NOT BIGNUM) (NOT BIT)
                     (NOT FIXNUM))
                    (AND BIGNUM BIT FIXNUM REAL (NOT BIGNUM) (NOT BIT)
                     (NOT FIXNUM))
                    (AND BIGNUM BIT FIXNUM REAL (NOT BIGNUM) (NOT BIT)
                     (NOT FIXNUM))
                    (AND BIGNUM BIT FIXNUM REAL (NOT BIGNUM) (NOT BIT)
                     (NOT FIXNUM))
                    (AND BIGNUM BIT FIXNUM REAL (NOT BIGNUM) (NOT BIT)
                     (NOT FIXNUM))
                    (AND BIGNUM BIT FIXNUM REAL (NOT BIT))
                    (AND BIGNUM BIT FIXNUM REAL (NOT BIT))
                    (AND BIGNUM BIT FIXNUM REAL (NOT BIT) (NOT FIXNUM))
                    (AND BIGNUM BIT FIXNUM REAL (NOT BIT) (NOT FIXNUM))
                    (AND BIGNUM BIT FIXNUM REAL (NOT BIT) (NOT FIXNUM))
                    (AND BIGNUM BIT FIXNUM REAL (NOT BIT) (NOT FIXNUM))
                    (AND BIGNUM FIXNUM REAL UNSIGNED-BYTE (NOT BIGNUM)
                     (NOT BIT))
                    (AND BIGNUM FIXNUM REAL UNSIGNED-BYTE (NOT BIGNUM)
                     (NOT BIT))
                    (AND BIGNUM FIXNUM REAL UNSIGNED-BYTE (NOT BIGNUM)
                     (NOT BIT) (NOT FIXNUM))
                    (AND BIGNUM FIXNUM REAL UNSIGNED-BYTE (NOT BIGNUM)
                     (NOT BIT) (NOT FIXNUM))
                    (AND BIGNUM FIXNUM REAL UNSIGNED-BYTE (NOT BIGNUM)
                     (NOT BIT) (NOT FIXNUM))
                    (AND BIGNUM FIXNUM REAL UNSIGNED-BYTE (NOT BIGNUM)
                     (NOT BIT) (NOT FIXNUM))
                    (AND BIGNUM FIXNUM REAL UNSIGNED-BYTE (NOT BIGNUM)
                     (NOT BIT) (NOT FIXNUM))
                    (AND BIGNUM FIXNUM REAL UNSIGNED-BYTE (NOT BIGNUM)
                     (NOT BIT) (NOT FIXNUM))
                    (AND BIGNUM FIXNUM REAL UNSIGNED-BYTE (NOT BIGNUM)
                     (NOT BIT) (NOT FIXNUM))
                    (AND BIGNUM FIXNUM REAL UNSIGNED-BYTE (NOT BIGNUM)
                     (NOT BIT) (NOT FIXNUM))
                    (AND BIGNUM FIXNUM REAL UNSIGNED-BYTE (NOT BIT))
                    (AND BIGNUM FIXNUM REAL UNSIGNED-BYTE (NOT BIT)
                     (NOT FIXNUM))
                    (AND BIGNUM FIXNUM REAL UNSIGNED-BYTE (NOT BIT)
                     (NOT FIXNUM))
                    (AND BIGNUM FIXNUM REAL UNSIGNED-BYTE (NOT BIT)
                     (NOT FIXNUM))
                    (AND BIGNUM FIXNUM REAL (NOT BIGNUM) (NOT BIT))
                    (AND BIGNUM FIXNUM REAL (NOT BIGNUM) (NOT BIT)
                     (NOT FIXNUM))
                    (AND BIGNUM FIXNUM REAL (NOT BIGNUM) (NOT BIT)
                     (NOT FIXNUM))
                    (AND BIGNUM FIXNUM REAL (NOT BIGNUM) (NOT BIT)
                     (NOT FIXNUM))
                    (AND BIGNUM FIXNUM REAL (NOT BIT) (NOT FIXNUM))
                    (AND BIGNUM FIXNUM REAL (NOT BIT) (NOT FIXNUM))
                    (AND BIT FIXNUM REAL UNSIGNED-BYTE (NOT BIGNUM)
                     (NOT BIT))
                    (AND BIT FIXNUM REAL UNSIGNED-BYTE (NOT BIGNUM)
                     (NOT BIT))
                    (AND BIT FIXNUM REAL UNSIGNED-BYTE (NOT BIGNUM)
                     (NOT BIT) (NOT FIXNUM))
                    (AND BIT FIXNUM REAL UNSIGNED-BYTE (NOT BIGNUM)
                     (NOT BIT) (NOT FIXNUM))
                    (AND BIT FIXNUM REAL UNSIGNED-BYTE (NOT BIGNUM)
                     (NOT BIT) (NOT FIXNUM))
                    (AND BIT FIXNUM REAL UNSIGNED-BYTE (NOT BIGNUM)
                     (NOT BIT) (NOT FIXNUM))
                    (AND BIT FIXNUM REAL UNSIGNED-BYTE (NOT BIGNUM)
                     (NOT BIT) (NOT FIXNUM))
                    (AND BIT FIXNUM REAL UNSIGNED-BYTE (NOT BIGNUM)
                     (NOT BIT) (NOT FIXNUM))
                    (AND BIT FIXNUM REAL UNSIGNED-BYTE (NOT BIGNUM)
                     (NOT BIT) (NOT FIXNUM))
                    (AND BIT FIXNUM REAL UNSIGNED-BYTE (NOT BIGNUM)
                     (NOT BIT) (NOT FIXNUM))
                    (AND BIT FIXNUM REAL UNSIGNED-BYTE (NOT BIGNUM)
                     (NOT BIT) (NOT FIXNUM))
                    (AND BIT FIXNUM REAL UNSIGNED-BYTE (NOT BIGNUM)
                     (NOT BIT) (NOT FIXNUM))
                    (AND BIT FIXNUM REAL UNSIGNED-BYTE (NOT BIGNUM)
                     (NOT BIT) (NOT FIXNUM))
                    (AND BIT FIXNUM REAL UNSIGNED-BYTE (NOT BIGNUM)
                     (NOT BIT) (NOT FIXNUM))
                    (AND BIT FIXNUM REAL UNSIGNED-BYTE (NOT BIT))
                    (AND BIT FIXNUM REAL UNSIGNED-BYTE (NOT BIT)
                     (NOT FIXNUM))
                    (AND BIT FIXNUM REAL UNSIGNED-BYTE (NOT BIT)
                     (NOT FIXNUM))
                    (AND BIT FIXNUM REAL UNSIGNED-BYTE (NOT BIT)
                     (NOT FIXNUM))
                    (AND BIT FIXNUM REAL UNSIGNED-BYTE (NOT BIT)
                     (NOT FIXNUM))
                    (AND BIT FIXNUM REAL (NOT BIGNUM) (NOT BIT))
                    (AND BIT FIXNUM REAL (NOT BIGNUM) (NOT BIT)
                     (NOT FIXNUM))
                    (AND BIT FIXNUM REAL (NOT BIGNUM) (NOT BIT)
                     (NOT FIXNUM))
                    (AND BIT FIXNUM REAL (NOT BIGNUM) (NOT BIT)
                     (NOT FIXNUM))
                    (AND BIT FIXNUM REAL (NOT BIGNUM) (NOT BIT)
                     (NOT FIXNUM))
                    (AND BIT FIXNUM REAL (NOT BIT))
                    (AND BIT FIXNUM REAL (NOT BIT) (NOT FIXNUM))
                    (AND BIT FIXNUM REAL (NOT BIT) (NOT FIXNUM))
                    (AND FIXNUM REAL UNSIGNED-BYTE (NOT BIGNUM) (NOT BIT)
                     (NOT FIXNUM))
                    (AND FIXNUM REAL UNSIGNED-BYTE (NOT BIGNUM) (NOT BIT)
                     (NOT FIXNUM))
                    (AND FIXNUM REAL UNSIGNED-BYTE (NOT BIT)
                     (NOT FIXNUM))
                    (AND FIXNUM REAL (NOT BIGNUM) (NOT BIT) (NOT FIXNUM))
                    (AND FIXNUM REAL (NOT BIT) (NOT FIXNUM))))
                 :full nil))))

(define-test types/reduce-lisp-type-6
  (assert-true (dnf-type-p
                (reduce-lisp-type '(AND (AND BIT FIXNUM UNSIGNED-BYTE)
                                         (OR (AND  BIT FIXNUM REAL UNSIGNED-BYTE)
                                          (AND BIT FIXNUM REAL UNSIGNED-BYTE (NOT FIXNUM)))) :full nil))))

(define-test types/reduce-lisp-type-7
  (assert-true (dnf-type-p
                (reduce-lisp-type '(AND
                                         (AND UNSIGNED-BYTE)
                                         (OR
                                          (AND UNSIGNED-BYTE)
                                          (AND REAL UNSIGNED-BYTE))) :full nil))))

(define-test types/reduce-lisp-type-8
  (assert-true (dnf-type-p
                (reduce-lisp-type
                '(AND 
                  (OR 
                   (AND BIT FIXNUM (NOT BIT))
                   (AND FIXNUM (NOT BIT) (NOT FIXNUM)))
                  (OR 
                   (AND BIT FIXNUM REAL (NOT BIT) (NOT FIXNUM))
                   (AND BIT FIXNUM REAL (NOT BIT))
                   ))
                :FULL NIL))))

(define-test types/reduce-lisp-type-9
  (assert-true (dnf-type-p
                (reduce-lisp-type
                '(AND 
                  (OR 
                   (AND BIT FIXNUM (NOT BIT))
                   (AND FIXNUM (NOT BIT) (NOT FIXNUM)))
                  (OR 
                   (AND BIT FIXNUM
                    (NOT BIT) (NOT FIXNUM))
                   (AND BIT FIXNUM
                    (NOT BIT))
                   ))
                :FULL NIL))))


(define-test types/reduce-lisp-type-10
  (assert-true (dnf-type-p
                (reduce-lisp-type
                '(AND (OR (AND BIGNUM BIT FIXNUM UNSIGNED-BYTE (NOT BIGNUM)
                           (NOT BIT))
                       (AND FIXNUM (NOT BIGNUM) (NOT BIT) (NOT FIXNUM))
                       (AND FIXNUM (NOT BIT) (NOT FIXNUM)))
                  (OR (AND BIGNUM BIT FIXNUM REAL UNSIGNED-BYTE (NOT BIGNUM)
                       (NOT BIT))
                   (AND BIGNUM BIT FIXNUM REAL UNSIGNED-BYTE (NOT BIGNUM)
                    (NOT BIT))
                   (AND BIGNUM BIT FIXNUM REAL UNSIGNED-BYTE (NOT BIGNUM)
                    (NOT BIT) (NOT FIXNUM))
                   (AND BIGNUM BIT FIXNUM REAL UNSIGNED-BYTE (NOT BIGNUM)
                    (NOT BIT) (NOT FIXNUM))
                   (AND BIGNUM BIT FIXNUM REAL UNSIGNED-BYTE (NOT BIT))
                   (AND BIGNUM BIT FIXNUM REAL UNSIGNED-BYTE (NOT BIT))
                   (AND BIGNUM BIT FIXNUM REAL UNSIGNED-BYTE (NOT BIT)
                    (NOT FIXNUM))
                   (AND BIGNUM BIT FIXNUM REAL UNSIGNED-BYTE (NOT BIT)
                    (NOT FIXNUM))
                   (AND BIGNUM BIT FIXNUM REAL (NOT BIGNUM) (NOT BIT))
                   (AND BIGNUM BIT FIXNUM REAL (NOT BIGNUM) (NOT BIT)
                    (NOT FIXNUM))
                   (AND BIGNUM BIT FIXNUM REAL (NOT BIGNUM) (NOT BIT)
                    (NOT FIXNUM))
                   (AND BIGNUM BIT FIXNUM REAL (NOT BIT))
                   (AND BIGNUM BIT FIXNUM REAL (NOT BIT))
                   (AND BIGNUM BIT FIXNUM REAL (NOT BIT) (NOT FIXNUM))
                   (AND BIGNUM BIT FIXNUM REAL (NOT BIT) (NOT FIXNUM))
                   (AND BIGNUM FIXNUM REAL UNSIGNED-BYTE (NOT BIGNUM)
                    (NOT BIT))
                   (AND BIT FIXNUM REAL (NOT BIGNUM) (NOT BIT)
                    (NOT FIXNUM))
                   (AND BIT FIXNUM REAL (NOT BIT))
                   (AND BIT FIXNUM REAL (NOT BIT) (NOT FIXNUM))
                   (AND BIT FIXNUM REAL (NOT BIT) (NOT FIXNUM))
                   (AND FIXNUM REAL UNSIGNED-BYTE (NOT BIGNUM) (NOT BIT)
                    (NOT FIXNUM))
                   (AND FIXNUM REAL UNSIGNED-BYTE (NOT BIGNUM) (NOT BIT)
                    (NOT FIXNUM))
                   (AND FIXNUM REAL UNSIGNED-BYTE (NOT BIT) (NOT FIXNUM))
                   (AND FIXNUM REAL (NOT BIGNUM) (NOT BIT) (NOT FIXNUM))
                   (AND FIXNUM REAL (NOT BIT) (NOT FIXNUM))))
                :FULL NIL))))


